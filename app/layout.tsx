import type { Metadata } from "next";
import "./globals.css";


export const metadata: Metadata = {
  title: "Vasilcoin | –°–∞–º—ã–π —Å—Ç–∏–ª—å–Ω—ã–π –º–µ–º—Ç–æ–∫–µ–Ω –≤ TON",
  description: "Vasilcoin - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–æ–∫–µ–Ω, —ç—Ç–æ —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏ –≤ —Å–µ—Ç–∏ TON. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Å–∞–º–æ–≥–æ –º–æ–¥–Ω–æ–≥–æ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –º–µ–º—Ç–æ–∫–µ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Ä–∏—Ç —É–ª—ã–±–∫–∏ –∏ —Å—á–∞—Å—Ç—å–µ —Å–≤–æ–∏–º –¥–µ—Ä–∂–∞—Ç–µ–ª—è–º.",
  // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏
  keywords: "Vasilcoin, TON, –º–µ–º—Ç–æ–∫–µ–Ω, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, —Å—Ç–∏–ª—å, The Open Network, —Ç–æ–∫–µ–Ω TON",
  authors: [
    {
      name: "Vasilcoin Team",
    }
  ],

  // Open Graph –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
  openGraph: {
    title: "Vasilcoin - –°—Ç–∏–ª—å–Ω—ã–π –º–µ–º—Ç–æ–∫–µ–Ω –≤ —Å–µ—Ç–∏ TON",
    description: "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–∞–º–æ–º—É –º–æ–¥–Ω–æ–º—É –∫—Ä–∏–ø—Ç–æ-–∫–æ–º—å—é–Ω–∏—Ç–∏ –≤ TON. Vasilcoin - —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–æ—Å–∏—Ç —Å—Ç–∏–ª—å –∏ –¥–∞—Ä–∏—Ç —Å—á–∞—Å—Ç—å–µ.",
    type: "website",
    locale: "ru_RU",
    siteName: "Vasilcoin",
    images: [
      {
        url: "/images/vasilcoin-og.png", // –ü—É—Ç—å –∫ OG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        width: 1200,
        height: 630,
        alt: "Vasilcoin - —Å—Ç–∏–ª—å–Ω—ã–π –º–µ–º—Ç–æ–∫–µ–Ω",
      }
    ],
  },

  // Twitter –∫–∞—Ä—Ç–æ—á–∫–∞
  twitter: {
    card: "summary_large_image",
    title: "Vasilcoin üíé –°–∞–º—ã–π —Å—Ç–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ TON",
    description: "–ú–æ–¥–Ω—ã–π –∞–∫—Å–µ—Å—Å—É–∞—Ä –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–∞ —Ç–µ–ø–µ—Ä—å –≤ TON. –î–æ–±–∞–≤—å —Å—Ç–∏–ª—è —Å–≤–æ–µ–º—É –ø–æ—Ä—Ç—Ñ–µ–ª—é!",
    images: ["/images/vasilcoin-og.png"], // –ü—É—Ç—å –∫ Twitter –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  },

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏
  viewport: "width=device-width, initial-scale=1, maximum-scale=1",
  robots: "index, follow",


  alternates: {
    canonical: "https://vasilcoin.io",
  },
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return children;
}

